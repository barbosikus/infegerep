"""
Набор данных представляет собой последовательность натуральных чисел.

Необходимо выбрать такую подпоследовательность подряд идущих чисел,
чтобы их сумма была максимальной и делилась на 1000.

В ответе укажите её сумму.
Гарантируется, что такая подпоследовательность существует.

Входные данные.

Даны два входных файла,
каждый из которых содержит в первой строке количество чисел
N (2 ≤ N ≤ 10⁸). Каждая из следующих N строк содержит натуральное число,
не превышающее 10000.

Пример входного файла:
6
997
3
4
12
88
1900

В этом наборе можно выбрать последовательности 997+3 (сумма 1000)
и 12+88+1900 (сумма 2000).
Наибольшую сумму имеет вторая из этих последовательностей. Ответ: 2000

В ответе укажите два числа:
сначала искомое значение для файла А,
затем для файла B.
"""
f = [int(q) for q in open('B41.txt')]
sl = []
sr = []
s = sum(f)
q = [i for i in f]
for i in range(len(f)):
    res = []
    l = q.pop(0)
    r = q.pop(-1)
    s-=l+r
    so = s%1000
    sl.append(l)
    sr.append(r)
    sml = 0
    for j in range(len(sl)-1,-1,-1):
        sml+=sl[j]
        if (sml+s)%1000==0:
            res.append(sml+s)
        smr = 0
        for k in range(len(sr)-1,-1,-1):
            smr+=sr[k]
            if (smr+sml+s)%1000==0:
                res.append(smr+sml+s)
    smr = 0
    for k in range(len(sr) - 1, -1, -1):
        smr += sr[k]
        if (smr + s) % 1000 == 0:
            res.append(smr + s)
    if len(res) > 0:
        print(max(res))
