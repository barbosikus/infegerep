"""
Набор данных представляет собой последовательность натуральных чисел.

Необходимо выбрать такую подпоследовательность подряд идущих чисел,
чтобы их сумма была максимальной и делилась на 69, и определить её длину.

Гарантируется, что такая подпоследовательность существует.
Если таких подпоследовательностей несколько,
нужно выбрать подпоследовательность наименьшей длины.

Входные данные.

Даны два входных файла,
каждый из которых содержит в первой строке количество чисел
N (2 ≤ N ≤ 10⁸).
Каждая из следующих N строк содержит натуральное число,
не превышающее 10000.

Пример входного файла:
5
12
29
28
41
16

В этом наборе можно выбрать последовательности 12+29+28 (сумма 69)
и 28+41 (сумма 69).
Наименьшую длину имеет вторая из этих последовательностей.
Ответ: 2.

В ответе укажите два числа:
сначала искомое значение для файла А,
затем для файла B.
"""
g = open('B69.txt')
f = [int(q) for q in g]
ms = [float('+inf') for i in range(69)]
ml = [0 for i in range(69)]
s = 0
l = 0
sc = 0
for i in range(len(f)):
    sc+=f[i]
    if sc%69==0:
        if sc > s or (sc == s and i < l):
            s = sc
            l = i
    a = sc - ms[sc%69]
    lc = i - ml[sc%69]
    if a>s or (s == a and lc<l):
        s = a
        l = lc
    if sc < ms[sc%69]:
        ms[sc % 69] = sc
        ml[sc % 69] = lc
print(s,l)
