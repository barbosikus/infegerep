"""
Исполнитель Цапля действует на плоскости с декартовой системой
координат. В начальный момент Цапля находится в начале координат,
её клюв направлен вдоль положительного направления оси ординат,
клюв опущен. При опущенном клюве Цапля оставляет на поле след в
виде линии. В каждой конкретный момент известно положение
исполнителя и направление его движения.

У исполнителя существует пять команд:

- Поднять клюв – переход в режим, когда Цапля не оставляет след,
- Опустить клюв – переход в режим, когда Цапля оставляет след,
- Вперед n (где n – целое число), вызывающая передвижение Цапли на
  n единиц в том направлении, куда указывает её клюв;
- Назад  n (где n – целое число), вызывающая передвижение Цапли на
  n единиц в обратном направлении относительно направления клюва;
- Направо m (где m – целое число), вызывающая изменение направления
  движения на m градусов по часовой стрелке;
- Дуга r, a, b (где r, a, b – целые числа), вызывающая
  передвижение Цапли из текущей точки с координатами (x, y)
  по дуге полуокружности с центром в точке с координатами
  (x+a, y+b) и радиусом r, движение по полуокружности идёт по
  часовой стрелке.

Запись Повтори k [Команда1 Команда2 … КомандаS] означает, что
последовательность из S команд повторится k раз.

Цапле дан алгоритм:

Опустить клюв
Повтори 7[
  Вперед 10
  Повтори 4 [Дуга 2, 2, 0]
  Назад 10
  Повтори 4 [Дуга 2, -2, 0]
]
Определите количество точек с целочисленными координатами,
которые находятся внутри полученного в ходе выполнения алгоритма контура.
"""
from turtle import *
tracer(0)
home()
r = 20
screensize(2000,10000)
begin_fill()
seth(90)
for i in range(7):
    fd(10*r)
    for i in range(4):
        seth(90)
        circle(2 * r, -180)
    bk(10*r)
    for i in range(4):
        seth(270)
        circle(2 * r, -180)
end_fill()
canvas = getcanvas()
c = 0
up()
for x in range(-20,20):
    for y in range(-20, 200):
        goto(x*r, y*r)
        dot(3, 'blue')
        # s = canvas.find_overlapping(x*r,y*r,x*r,y*r)
        # if s==(5,):
        #     c+=1
        #     print(c)
mainloop()